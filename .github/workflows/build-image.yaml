---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build-image

permissions:
  contents: read

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/build-image.yaml

  workflow_dispatch:
    inputs:
      tags:
        description: "Tags for the image"
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mariusrugan/lets-rust

jobs:
  #
  # Inspired from:
  # https://github.com/juspay/hyperswitch/blob/main/.github/workflows/CI-push.yml
  #
  # formatting:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Install Rust
  #     uses: dtolnay/rust-toolchain@master
  #     with:
  #       toolchain: nightly
  #       components: rustfmt

  #   - name: Check formatting
  #     shell: bash
  #     run: cargo +nightly fmt --all --check

  #
  # Inspired from:
  # https://github.com/svenstaro/miniserve/blob/master/.github/workflows/build-release.yml
  # https://github.com/JMBeresford/retrom/blob/main/.github/workflows/publish-images.yml
  #
  container-images:
      name: Publish images
      runs-on: ubuntu-latest
      needs: publish

      # Run for tags and pushes to the default branch
      if: (startsWith(github.ref_name, 'v') && github.ref_type == 'tag') || github.event.repository.default_branch == github.ref_name

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup QEMU
          uses: docker/setup-qemu-action@v3
          with:
            image: tonistiigi/binfmt:qemu-v6.1.0-20
            platforms: all

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            buildkitd-flags: --debug

        - name: Docker login
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
