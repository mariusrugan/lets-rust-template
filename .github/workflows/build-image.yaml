---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: build-image

permissions:
  contents: read

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/build-image.yaml
      - Dockerfile

  workflow_dispatch:
    inputs:
      tags:
        description: "Tags for the image"
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: mariusrugan/lets-rust

jobs:
  #
  # Inspired from:
  # https://github.com/juspay/hyperswitch/blob/main/.github/workflows/CI-push.yml
  #
  formatting:
    name: Formatting checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: nightly
        components: rustfmt

    - name: Check formatting
      shell: bash
      run: cargo +nightly fmt --all --check

  #
  # 1. 
  #
  # Inspired from:
  # https://docs.docker.com/build/ci/github-actions/multi-platform/
  # https://github.com/svenstaro/miniserve/blob/master/.github/workflows/build-release.yml
  # https://github.com/JMBeresford/retrom/blob/main/.github/workflows/publish-images.yml
  #
  #
  build-images:
    name: Build images
    runs-on: ubuntu-latest
    needs: [formatting]

    # Run for tags and pushes to the main branch
    if: (startsWith(github.ref_name, 'v') && github.ref_type == 'tag') || github.event.repository.default_branch == github.ref_name

    strategy:
      fail-fast: false

      matrix:
        platform:
          - linux/amd64
          # - linux/arm/v6
          # - linux/arm/v7
          # - linux/arm64

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      #
      #
      #
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV     

      #
      #
      #
      - name: Checkout code
        uses: actions/checkout@v4

      #
      #
      #
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      #
      #
      #
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      #
      #
      #
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      #
      # https://github.com/docker/login-action
      #
      - name: Docker login
        # uses: docker/login-action@v3
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #
      #
      #
      - name: Build By Digest
        id: build
        # uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          file: ./Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true

      #
      #
      #
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      #
      #
      #
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  #
  # 2.
  #
  merge-digests:
    name: Publish images
    runs-on: ubuntu-latest
    needs:
      - build-images

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
